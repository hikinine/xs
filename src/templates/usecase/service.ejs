import { <%= props.DTO %> } from './<%= props.DTO %>';
import { Service, InjectableDependencies } from "../../../base/abstract/Service"
import { Authorization } from '../../../base/abstract/Authorization';
<% for(var i=0; i<props.Repositories.length; i++) {%>import { <%= props.Repositories[i] %> } from './../../repositories/<%= props.Repositories[i] %>';
<% } %>

interface Repositories {
  <% for(var i=0; i<props.Implementation.length; i++) {%><%= props.collectionModules[i] %>: <%= props.Repositories[i] %>,
  <% } %>
}
interface Services {}

export class <%= props.Service %> extends Service<Repositories, Services> {
  constructor(props: InjectableDependencies<Repositories, Services>) {
    super(props)

    this.setAuthorization({
      role: Authorization.Role.,
      level: Authorization.Level.
    })
  }

  async execute(dto: <%= props.DTO %>) {
    
  }
}